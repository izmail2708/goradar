from django import forms
from .models import Report

class ReportForm(forms.ModelForm):
	report_type=forms.ChoiceField(label='Выберите тип сущности',widget = forms.Select(), choices = ([('Озеленённые территории','Озеленённые территории'), ('Улично-дорожная сеть','Улично-дорожная сеть'),('Переход','Переход'),('Остановочный пункт','Остановочный пункт'),('Водный объект','Водный объект'),('Двор','Двор'),('Здание','Здание'), ]), initial='Озеленённые территории', required = True,)
	class Meta:
		model = Report
		fields = ('report_type',)

class GreenZone(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Парк и лесопарк','Парк и лесопарк'), ('Сквер и бульвар', 'Сквер и бульвар'), ('Газоны и клумбы', 'Газоны и клумбы')]), initial='Парк и лесопарк', required = True,)
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('Совершение преступления','Совершение преступления'),('Неисправное освещение','Неисправное освещение'), ('Алергенное насаждение', 'Алергенное насаждение'), ('Наледь', 'Наледь'), ('Пьяные компании', 'Пьяные компании'),('Опасные конструкции', 'Опасные конструкции'),('Отсутсвие указателей','Отсутсвие указателей'), ('Нечитаемость адресных табличек', 'Нечитаемость адресных табличек'),('Отсутсвие инфраструктуры для инвалидов','Отсутсвие инфраструктуры для инвалидов'),('Мусор', 'Мусор'),('Отсутсвие скамеек', 'Отсутсвие скамеек'),('Повреждение скамеек','Повреждение скамеек'),('Повреждение детских площадок','Повреждение детских площадок'),('Повреждение спортивных зон','Повреждение спортивных зон'),('Неухоженность насаждений','Неухоженность насаждений')]), initial='Парк и лесопарк', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

class RoadNetwork(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Автомобильная дорога','Автомобильная дорога'), ('Велосипедная дорога', 'Велосипедная дорога'), ('Пешеходная дорога', 'Пешеходная дорога')]), initial='Автомобильная дорога', required = True,)
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('ДТП с участием пешехода','ДТП с участием пешехода'),('ДТП с участием одних автомобилистов','ДТП с участием одних автомобилистов'), ('Наличие ямы', 'Наличие ямы'), ('Наличие трещины', 'Наличие трещины'), ('Наличие неисправного освещения', 'Наличие неисправного освещения'),('Визуальные несовершенства дорожных знаков', 'Визуальные несовершенства дорожных знаков'),('Несовершенство разметки','Несовершенство разметки'), ('Наледь', 'Наледь'),('Парковка в неположенном месте','Парковка в неположенном месте'),('Мусор', 'Мусор'),('Несанкционированная реклама', 'Несанкционированная реклама'),('Разрыв велосипедного маршрута','Разрыв велосипедного маршрута'),('Разрыв велосипедного маршрута','Разрыв велосипедного маршрута'),('Открытй люк', 'Открытй люк')]), initial='ДТП с участием пешехода', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

class Transition(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Наземный переход','Наземный переход'), ('Подземный переход', 'Подземный переход'), ('Надземный переход', 'Надземный переход')]), initial='Наземный переход', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('ДТП с участием пешехода','ДТП с участием пешехода'),('Неисправная светофорная кнопка','Неисправная светофорная кнопка'), ('Неисправное освещение', 'Неисправное освещение'), ('Повреждение пешеходной поверхности', 'Повреждение пешеходной поверхности'), ('Наледь', 'Наледь'),('Несовершенство разметки', 'Несовершенство разметки'),('Неисправное занижение','Неисправное занижение'), ('Отсутствие тактильной разметки', 'Отсутствие тактильной разметки'),('Несанкционированная реклама','Несанкционированная реклама'),('Мусор', 'Мусор'),('Повреждение ступеней', 'Повреждение ступеней'),('Отсутствие пандуса','Отсутствие пандуса'),('Отсутствие разметки','Отсутствие разметки'),('Отсутствие системы аудио-ориентирования “Говорящий город”', 'Отсутствие системы аудио-ориентирования “Говорящий город”'),('Отсутствие кнопки вызова соц. помощи','Отсутствие кнопки вызова соц. помощи'),('Графити','Графити')]), initial='ДТП с участием пешехода', required = True,)
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

class StoppingPoint(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Наземная остановка','Наземная остановка'), ('Подход к станции метро', 'Подход к станции метро')]), initial='Наземная остановка', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('ДТП с участием пешехода','ДТП с участием пешехода'),('Неисправное освещение','Неисправное освещение'), ('Повреждение конструкции', 'Повреждение конструкции'), ('Отсутствие тактильной разметки', 'Отсутствие тактильной разметки'), ('Отсутствие информационного столба', 'Отсутствие информационного столба'),('Несовершенства информационного столба', 'Несовершенства информационного столба'),('Отсутствие системы аудио-ориентирования “Говорящий город”','Отсутствие системы аудио-ориентирования “Говорящий город”'),('Несанкционированная реклама', 'Несанкционированная реклама'),('Неисправная скамья', 'Неисправная скамья'),('Неисправное освещение','Неисправное освещение'),('Отсутствие тактильной разметки','Отсутствие тактильной разметки'),('Отсутствие кнопки вызова соц. помощи', 'Отсутствие кнопки вызова соц. помощи'),('Несовершенства указателей','Несовершенства указателей'),('Мусор','Мусор'),('Графити','Графити')]), initial='ДТП с участием пешехода', required = True,)
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

class WaterBody(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Водный объект','Водный объект')]), initial='Водный объект', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('Превышение норм вредоносных веществ в воде','Превышение норм вредоносных веществ в воде'),('Неисправность линии буйков','Неисправность линии буйков'), ('Опасный предмет на дне', 'Опасный предмет на дне'), ('Отсутствие плавных подходов к воде', 'Отсутствие плавных подходов к воде'), ('Отсутствие инвалидной инфраструктуры', 'Отсутствие инвалидной инфраструктуры'),('Отсутствие инвалидной инфраструктуры', 'Отсутствие инвалидной инфраструктуры'),('Мусор в воде','Мусор в воде'),('Мусор на прилегающей территории', 'Мусор на прилегающей территории'),('Неисправный шезлонг', 'Неисправный шезлонг'),('Отсутствие кабины для переодевания','Отсутствие кабины для переодевания'),('Неисправную кабину для переодевания','Неисправную кабину для переодевания'),('Граффити', 'Граффити'),('Несанкционированная реклама','Несанкционированная реклама')]), initial='ДТП с участием пешехода', required = True,)
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

class Yard(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Двор','Двор')]), initial='Двор', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('Граффити','Граффити'),('Отсутствие скамеек','Отсутствие скамеек'), ('Отсутствие урн', 'Отсутствие урн'), ('Мусор', 'Мусор'), ('Отсутствие детской площадки', 'Отсутствие детской площадки'),('Отсутствие спортивной зоны', 'Отсутствие спортивной зоны'),('Повреждение скамеек','Повреждение скамеек'),('Повреждение детских площадок', 'Повреждение детских площадок'),('Повреждение спортивных зон', 'Повреждение спортивных зон'),('Повреждение урн','Повреждение урн'),('Повреждение помойных контейнеров','Повреждение помойных контейнеров'),('Мусор вокруг помойных контейнеров', 'Мусор вокруг помойных контейнеров'),('Неисправное освещение','Неисправное освещение'),('Пьяные компании','Пьяные компании'),('Опасно выступающие конструкции','Опасно выступающие конструкции'),('Незаконная установка объектов','Незаконная установка объектов')]), initial='Граффити', required = True,)
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

class Buildings(forms.ModelForm):
	report_subtype=forms.ChoiceField(label='Выберите подтип сущности',widget = forms.Select(), choices = ([('Жилые здания','Жилые здания'),('Смешанные здания','Смешанные здания'),('Коммерческие здания','Коммерческие здания')]), initial='Жилие здания', required = True,)
	report_description=forms.CharField(label='Кратко опишите проблему')
	report_problem=forms.ChoiceField(label='Выберите проблему',widget = forms.Select(), choices = ([('Трещина на стене','Трещина на стене'),('Обвал крыши','Обвал крыши'), ('Разбитое окно', 'Разбитое окно'), ('Неисправное освещение на входе', 'Неисправное освещение на входе'), ('Неисправный домофон', 'Неисправный домофон'),('Наледь на ступенях', 'Наледь на ступенях'),('Отсутствие адресной таблички','Отсутствие адресной таблички'),('Нечитаемость адресной таблички', 'Нечитаемость адресной таблички'),('Отсутствие пандуса', 'Отсутствие пандуса'),('Отсутсвие системы аудио-ориентирования “Говорящий город"','Отсутсвие системы аудио-ориентирования “Говорящий город"'),('Граффити на фасаде','Граффити на фасаде'),('Отсутствие кнопки для инвалидов', 'Отсутствие кнопки для инвалидов')]), initial='Трещина на стене', required = True,)
	class Meta:
		model = Report
		fields = ('report_subtype', 'report_problem', 'report_photo','report_description')

